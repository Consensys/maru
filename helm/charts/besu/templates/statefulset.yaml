apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "besu.fullname" . }}
  labels:
    app: {{ include "besu.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "besu.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "besu.name" . }}
    spec:
      containers:
        - name: {{ include "besu.name" . }}
          image: "{{ .Values.image.name }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /opt/besu/bin/besu
            - --config-file=/opt/besu/configs/configs.toml
            - --genesis-file=/opt/besu/configs/genesis.json
            - --node-private-key-file="/opt/besu/configs/private-key.txt"
          volumeMounts:
            - name: data
              mountPath: /opt/besu/data
            - name: configs
              mountPath: /opt/besu/configs
          ports:
            - name: ethApiPort
              containerPort: {{ .Values.service.ethApiPort }}
              protocol: TCP
            - name: engineApiPort
              containerPort: {{ .Values.service.engineApiPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
              protocol: TCP
            {{- if .Values.service.metricsPort }}
            - name: observability
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
            {{- end }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "besu.fullname" . }}-configs
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "{{ $.Values.persistence.accessMode }}" ]
        resources:
          requests:
            storage: {{ $.Values.persistence.size }}
        {{- if $.Values.persistence.storageClass }}
        storageClassName: {{ $.Values.persistence.storageClass }}
        {{- end }}
