apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "maru.fullname" . }}
  labels:
    app: {{ include "maru.name" . }}
spec:
  serviceName: {{ include "maru.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "maru.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "maru.name" . }}
    spec:
      containers:
        - name: {{ include "maru.name" . }}
          image: "{{ .Values.image.name }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - java
            - -Dlog4j2.configurationFile=configs/log4j.xml
            - -jar
            - maru.jar
            - --maru-genesis-file
            - /opt/consensys/maru/configs/genesis.json
            - --config
            - /opt/consensys/maru/configs/configs.toml
          volumeMounts:
            - name: data
              mountPath: /opt/consensys/maru/data
            - name: configs
              mountPath: /opt/consensys/maru/configs
          ports:
            - name: http
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
              protocol: TCP
            {{- if .Values.service.observabilityPort }}
            - name: observability
              containerPort: {{ .Values.service.observabilityPort }}
              protocol: TCP
            {{- end }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "maru.fullname" . }}-configs
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "{{ $.Values.persistence.accessMode }}" ]
        resources:
          requests:
            storage: {{ $.Values.persistence.size }}
          {{- if $.Values.persistence.storageClass }}
        storageClassName: {{ $.Values.persistence.storageClass }}
          {{- end }}
