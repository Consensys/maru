import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
  id 'maru.kotlin-library-conventions'
}

dependencies {
  implementation project(":executionlayer")
  // For the syncing logic
  implementation project(":jvm-libs:mappers")
  implementation(project(":jvm-libs:extensions"))
  implementation project(":jvm-libs:test-utils")
  implementation("build.linea.internal:web3j-extensions") {
    exclude group: "build.linea", module: "besu-libs"
  }
  implementation("build.linea.internal:file-system")

  implementation "tech.pegasys.teku.internal:executionclient"
  implementation "tech.pegasys.teku.internal:time"
  implementation "tech.pegasys.teku.internal:ethereum-events"
  implementation "tech.pegasys.teku.internal:spec"

  implementation("org.web3j:core")

  implementation("org.http4k:http4k-core")
  implementation("org.http4k:http4k-client-okhttp")
  implementation("org.http4k:http4k-format-jackson")
}

sourceSets {
  acceptanceTest {
    kotlin {
      compileClasspath += main.output
      runtimeClasspath += main.output
    }
    compileClasspath += sourceSets.main.output + sourceSets.main.compileClasspath + sourceSets.test.compileClasspath
    runtimeClasspath += sourceSets.main.output + sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  }
}


build.dependsOn compileAcceptanceTestKotlin

tasks.register('acceptanceTest', Test) { test ->
  description = "Runs acceptance tests."
  group = "verification"
  useJUnitPlatform()
  outputs.upToDateWhen { false }

  classpath = sourceSets.acceptanceTest.runtimeClasspath
  testClassesDirs = sourceSets.acceptanceTest.output.classesDirs

  testLogging {
    events TestLogEvent.FAILED,
      TestLogEvent.SKIPPED,
      TestLogEvent.STANDARD_ERROR
    exceptionFormat TestExceptionFormat.FULL
    showCauses true
    showExceptions true
    showStackTraces true
    // set showStandardStreams if you need to see test logs
    showStandardStreams true
  }
}
