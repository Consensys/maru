replicaCount: 1
image:
  name: consensys/maru:develop
  pullPolicy: IfNotPresent
service:
  type: ClusterIP
  ports:
    - name: api
      port: 5060
    - name: p2p
      port: 9000
      protocol: TCP
    - name: discovery
      port: 9000
      protocol: UDP
    - name: metrics
      port: 9545
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 1Gi
  storageClass: ""

# Health check probes configuration
probes:
  liveness:
    enabled: true
    type: httpGet  # Options: httpGet, tcpSocket, exec
#    tcpSocket:
#      port: api  # Use the API port for liveness check
    httpGet:
     path: /live
     port: 9545
     scheme: HTTP
    # exec:
    #   command: ["/bin/sh", "-c", "pgrep java"]
    initialDelaySeconds: 2
    periodSeconds: 1
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  readiness:
    enabled: true
    type: httpGet  # Options: httpGet, tcpSocket, exec
#    tcpSocket:
#      port: api  # Use the API port for readiness check
    httpGet:
      path: /ready
      port: 9545
      scheme: HTTP
    # exec:
    #   command: ["/bin/sh", "-c", "nc -z localhost 5060"]
    initialDelaySeconds: 2
    periodSeconds: 1
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

configFiles:
  privateKey: |
  configsDefaultsToml: |
    allow-empty-blocks = true

    [persistence]
    data-path="/opt/consensys/maru/data/db"
    private-key-path="/opt/consensys/maru/configs/private-key.txt"

    [p2p]
    port = 9000
    ip-address = "0.0.0.0"

    [p2p.discovery]
    port = 9000
    refresh-interval = "2 seconds"

    [syncing]
    peer-chain-height-polling-interval = "1 seconds"
    el-sync-status-refresh-interval = "1 seconds"
    use-unconditional-random-download-peer = false
    sync-target-selection = "Highest"

    [observability]
    port = 9545

    [api]
    port = 5060
  configsToml: |
  genesisJson: |
    {
      "chainId": 1337,
      "config": {
        "0": {
          "type": "delegated",
          "blockTimeSeconds": 1,
          "postTtdConfig": {
            "validatorSet": ["0x1b9abeec3215d8ade8a33607f2cf0f4f60e5f0d0"],
            "elFork": "Paris"
          },
          "terminalTotalDifficulty": 10
        },
        "1683325137": {
          "type": "qbft",
          "validatorSet": ["0x1b9abeec3215d8ade8a33607f2cf0f4f60e5f0d0"],
          "blockTimeSeconds": 2,
          "feeRecipient": "0x0000000000000000000000000000000000000000",
          "elFork": "Prague"
        }
      }
    }
  log4j: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO" monitorInterval="2">
    <Appenders>
      <Console name="Console" target="SYSTEM_OUT">
        <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}{UTC} | %-5level | %c{1} | %msg %throwable%n" />
      </Console>
    </Appenders>
    <Loggers>
     <Logger name="org.hyperledger.besu" level="INFO"/>
      <Logger name="tech.pegasys.teku" level="INFO"/>
      <Logger name="maru" level="INFO"/>
      <Logger name="maru.syncing" level="DEBUG"/>
      <Logger name="clients" level="DEBUG"/>
      <Root level="INFO">
        <AppenderRef ref="Console"/>
      </Root>
    </Loggers>
    </Configuration>
